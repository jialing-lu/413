@page "/admin/books/edit/{id:long}"
@page "/admin/books/create"

@inherits OwningComponentBase<IBookStoreRepository>

<style>
    div.validation-message { color: rgb(220, 53, 69); font-weight: 500 }
</style>

<h3 class="bg-@ThemeColor text-white text-center p-1">@TitleText a Product</h3>

<EditForm Model="books" OnValidSubmit="SaveProduct">

    <DataAnnotationsValidator></DataAnnotationsValidator>

        @if (books.BookId != 0)
        {
            <div class="form-group">
                <label>Book ID</label>
                <input class="form-control" disabled value="@books.BookId" />
            </div>
        }

        <div class="form-group">
            <label>Book Name</label>
            <ValidationMessage For="@(() => books.Title)" />
            <InputText class="form-control" @bind-Value="books.Title" />
        </div>

        <div class="form-group">
            <label>Author</label>
            <ValidationMessage For="@(() => books.Author)" />
            <InputText class="form-control" @bind-Value="books.Author" />
        </div>

        <div class="form-group">
            <label>Publisher</label>
            <ValidationMessage For="@(() => books.Publisher)" />
            <InputText class="form-control" @bind-Value="books.Publisher" />
        </div>

        <div class="form-group">
            <label>ISBN</label>
            <ValidationMessage For="@(() => books.Isbn)" />
            <InputText class="form-control" @bind-Value="books.Isbn" />
        </div>

        <div class="form-group">
            <label>Classification</label>
            <ValidationMessage For="@(() => books.Classification)" />
            <InputText class="form-control" @bind-Value="books.Classification" />
        </div>

        <div class="form-group">
            <label>Category</label>
            <ValidationMessage For="@(() => books.Category)" />
            <InputText class="form-control" @bind-Value="books.Category" />
        </div>

        <div class="form-group">
            <label>Number of Page</label>
            <ValidationMessage For="@(() => books.PageCount)" />
            <InputNumber class="form-control" @bind-Value="books.PageCount" />
        </div>

        <div class="form-group">
            <label>Price</label>
            <ValidationMessage For="@(() => books.Price)" />
            <InputNumber class="form-control" @bind-Value="books.Price" />
        </div>

        <button type="submit" class="btn btn-@ThemeColor">Save</button>

        <NavLink class="btn btn-secondary" href="/admin/books">Cancel</NavLink>

</EditForm>

@code {

    public IBookStoreRepository repo => Service;

    [Inject]
    public NavigationManager NavManager { get; set; }

    [Parameter]
    public long Id { get; set; } = 0;

    public LmazonBookStore.Models.Books books { get; set; } = new LmazonBookStore.Models.Books();

    protected override void OnParametersSet()
    {
        if (Id != 0)
        {
            books = repo.Books.FirstOrDefault(x => x.BookId == Id);
        }
    }

    public void SaveProduct()
    {
        if (Id == 0)
        {
            repo.CreateProduct(books);
        }
        else
        {
            repo.SaveProduct(books);
        }

        NavManager.NavigateTo("/admin/books");
    }

    public string ThemeColor => Id == 0 ? "primary" : "warning";

    public string TitleText => Id == 0 ? "Create" : "Edit";
}