@page "/admin/orders"

@inherits OwningComponentBase<ICheckOutRepository>

<OrderTable TableTitle="Unshipped Orders" Orders="UnshippedOrders"
            ButtonLabel="Ship" OrderSelected="ShipOrder" />

<OrderTable TableTitle="Shipped Orders" Orders="ShippedOrders"
            ButtonLabel="Reset" OrderSelected="ResetOrder" />

<button class="btn btn-info" @onclick="@(e => UpdateData())">Refresh Data</button>

@code {

    public ICheckOutRepository Repository => Service;

    public IEnumerable<CheckOut> AllOrders { get; set; }

    public IEnumerable<CheckOut> UnshippedOrders { get; set; }

    public IEnumerable<CheckOut> ShippedOrders { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllOrders = await Repository.CheckOut.ToListAsync();
        UnshippedOrders = AllOrders.Where(o => !o.Shipped);
        ShippedOrders = AllOrders.Where(o => o.Shipped);
    }

    public void ShipOrder(int id) => UpdateOrder(id, true);

    public void ResetOrder(int id) => UpdateOrder(id, false);

    private void UpdateOrder(int id, bool shipped)
    {
        CheckOut c = Repository.CheckOut.FirstOrDefault(o => o.CheckoutId == id);
        c.Shipped = shipped;
        Repository.SaveCheckOut(c);
    }
}