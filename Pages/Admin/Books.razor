@page "/admin/books"
@page "/admin"

@inherits OwningComponentBase<IBookStoreRepository>

<form>
    <div class="input-group md-form form-sm form-2 pl-0">

        <input class="form-control my-0 py-1 red-border" type="text" placeholder="Search" />

        <div class="input-group-append">

            <span class="input-group-text red lighten-3" id="basic-text1">
                    <i class="fas fa-search text-grey" aria-hidden="true"></i>
            </span>

        </div>
    </div>
</form>
<br />
<table class="table table-sm table-striped table-bordered table-hover">
    <thead>
        <tr>
            <th>Book ID</th>
            <th>Book Name</th>
            <th>Author</th>
            <th>Price</th>
            <td />
        </tr>
    </thead>
    <tbody>
        @if (books?.Count() > 0)
        {
            //List the Books
            @foreach(LmazonBookStore.Models.Books b in books)
            {
                <tr>
                    <td>@b.BookId</td>
                    <td>@b.Title</td>
                    <td>@b.Author</td>
                    <td>@b.Price.ToString("$#,##0.00")</td>
                    <td>
                        <NavLink class="btn btn-info btn-sm" href="@GetDetailsUrl(b.BookId)"> Details </NavLink>
                    </td>
                    <td>
                        <NavLink class="btn btn-warning btn-sm" href="@GetEditUrl(b.BookId)"> Edit </NavLink>
                    </td>
                    <td>
                        <button class="btn btn-danger btn-sm" @onclick="@(x => RemoveProduct(b))">Delete</button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="5" class="text-center">No Products</td>
            </tr>
        }
    </tbody>
</table>

<NavLink class="btn btn-primary" href="/admin/books/create">Create</NavLink>

@code {
    public IBookStoreRepository repo => Service;

    public IEnumerable<LmazonBookStore.Models.Books> books { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        books = await repo.Books.ToListAsync();
    }

    public string GetDetailsUrl(long id) => $"/admin/books/details/{id}";

    public string GetEditUrl(long id) => $"/admin/books/edit/{id}";

    public async Task RemoveProduct (LmazonBookStore.Models.Books b)
    {
        repo.DeleteProduct(b);
        await UpdateData();
    }

}